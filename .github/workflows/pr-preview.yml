name: PR Preview Build

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  build-preview:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Setup SBT
      uses: sbt/setup-sbt@v1

    - name: Cache SBT
      uses: actions/cache@v4
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
          ~/.coursier/cache
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', 'project/**') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Run tests
      run: sbt test

    - name: Generate coverage report
      run: python3 scripts/analyze_coverage.py

    - name: Compile Scala.js
      run: sbt fastOptJS

    - name: Build Indigo
      run: sbt indigoBuild

    - name: Deploy PR Preview to Pages
      run: |
        # Store build files
        mkdir -p /tmp/build
        cp -r target/indigoBuild/* /tmp/build/
        
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Switch to gh-pages branch (create if doesn't exist)
        if git ls-remote --exit-code --heads origin gh-pages; then
          git fetch origin gh-pages:gh-pages
          git checkout gh-pages
        else
          git checkout --orphan gh-pages
          git rm -rf . 2>/dev/null || true
          
          # Create index file for main site navigation
          cat > index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Scala Roguelike 2025 - PR Previews</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                .pr-link { display: block; margin: 10px 0; padding: 10px; 
                          background: #f5f5f5; text-decoration: none; color: #333; }
                .pr-link:hover { background: #e5e5e5; }
            </style>
        </head>
        <body>
            <h1>Scala Roguelike 2025 - PR Previews</h1>
            <p>This page lists available PR preview builds.</p>
            <p><a href="https://kabuumu.github.io/scala-roguelike-2025/">‚Üê Back to main game</a></p>
            <div id="pr-list">
                <!-- PR links will be updated by GitHub Actions -->
            </div>
        </body>
        </html>
        EOF
        fi
        
        # Create PR-specific directory
        mkdir -p pr-${{ github.event.number }}
        
        # Copy build files to PR directory
        cp -r /tmp/build/* pr-${{ github.event.number }}/
        
        # Add and commit changes
        git add .
        git commit -m "Deploy PR #${{ github.event.number }} preview" || exit 0
        git push origin gh-pages

    - name: Comment PR with preview link
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const previewUrl = `https://kabuumu.github.io/scala-roguelike-2025/pr-${prNumber}/`;
          
          const comment = `## üéÆ PR Preview Ready!

Your changes are live and ready for testing!

### üîó **[Play the game directly ‚Üí](${previewUrl})**

**How to test:**
1. Click the link above to play immediately in your browser
2. Use arrow keys to move, Q to equip items
3. Test the changes described in this PR

**Changes in this PR:** ${context.payload.pull_request.title}

> **Note**: This preview is automatically updated when you push new commits. The preview will be removed when the PR is closed.`;
          
          // Check if we already commented
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
          });
          
          const existingComment = comments.data.find(comment => 
            comment.user.login === 'github-actions[bot]' && 
            comment.body.includes('üéÆ PR Preview Ready!')
          );
          
          if (existingComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: comment
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });
          }