name: PR Preview Build

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  build-preview:
    # Skip previews for forks (token is read-only on forked PRs)
    if: ${{ github.event.pull_request.head.repo.fork == false }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install sbt
      uses: coursier/setup-action@v1
      with:
        apps: sbt

    - name: Cache SBT
      uses: actions/cache@v4
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
          ~/.coursier/cache
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', 'project/**') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Run tests
      run: sbt test

    - name: Run coverage analysis and enforce 49% baseline
      run: |
        set -o pipefail
        python3 scripts/analyze_coverage.py --no-file | tee coverage-output.txt
        if grep -q "Coverage Below Threshold" coverage-output.txt; then
          echo "Coverage baseline (49%) not met."
          exit 1
        fi

    - name: Append coverage summary to PR
      if: always()
      run: |
        echo "## Coverage Summary (PR Preview)" >> $GITHUB_STEP_SUMMARY
        ov=$(grep -m1 "Estimated overall coverage:" coverage-output.txt | sed 's/Estimated overall coverage: //')
        echo "- Overall: $ov" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "<details><summary>Full report</summary>" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat coverage-output.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "</details>" >> $GITHUB_STEP_SUMMARY

    - name: Build game
      run: sbt build

    - name: Deploy PR Preview to gh-pages root pr-N and update pr-index
      run: |
        set -euxo pipefail

        # Store build files
        mkdir -p /tmp/build
        cp -r target/indigoBuild/* /tmp/build/

        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Switch to gh-pages branch (create if doesn't exist)
        if git ls-remote --exit-code --heads origin gh-pages; then
          git fetch origin gh-pages:gh-pages
          git checkout gh-pages
        else
          git checkout --orphan gh-pages
          git rm -rf . 2>/dev/null || true
        fi

        # Create PR-specific directory at repo root (flat)
        mkdir -p pr-${{ github.event.pull_request.number }}

        # Copy build files to PR directory
        rsync -a --delete /tmp/build/ pr-${{ github.event.pull_request.number }}/

        # Generate/update pr-index.html listing all pr-* folders
        bash -c '
        set -euo pipefail
        shopt -s nullglob
        {
          echo "<!DOCTYPE html>"
          echo "<html><head><meta charset=\"utf-8\"/>"
          echo "<title>Scala Roguelike 2025 - PR Previews</title>"
          echo "<style>body{font-family:Arial,sans-serif;margin:40px} .pr{margin:6px 0}</style>"
          echo "</head><body>"
          echo "<h1>PR Previews</h1>"
          echo "<p><a href=\"./\">Back to main site</a></p>"
          echo "<ul>"
          for d in pr-*; do
            if [ -d \"$d\" ]; then
              echo "<li class=\\\"pr\\\"><a href=\\\"./$d/\\\">$d</a></li>"
            fi
          done
          echo "</ul>"
          echo "</body></html>"
        } > pr-index.html
        '

        # Commit and push
        git add .
        git commit -m "Deploy PR #${{ github.event.pull_request.number }} preview" || true
        git push origin gh-pages

    - name: Comment PR with preview link
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const base = `https://${context.repo.owner}.github.io/${context.repo.repo}`;
          const previewUrl = `${base}/pr-${prNumber}/`;
          const indexUrl = `${base}/pr-index.html`;

          const comment = `## ðŸŽ® PR Preview Ready!

          Your changes are live and ready for testing!

          ### ðŸ”— **[Play the game directly â†’](${previewUrl})**
          Alternate index listing all previews: ${indexUrl}

          **How to test:**
          1. Click the link above to play immediately in your browser
          2. Use arrow keys to move, Q to equip items
          3. Test the changes described in this PR

          **Changes in this PR:** ${context.payload.pull_request.title}

          > This preview updates on new commits and is removed when the PR is closed.`;

          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
          });

          const existingComment = comments.data.find(c =>
            c.user?.login === 'github-actions[bot]' &&
            c.body?.includes('ðŸŽ® PR Preview Ready!')
          );

          if (existingComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: comment
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });
          }